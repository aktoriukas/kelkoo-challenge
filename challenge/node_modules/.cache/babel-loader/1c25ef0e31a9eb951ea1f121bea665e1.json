{"ast":null,"code":"import _slicedToArray from\"/home/aktoriukas/Documents/projects/kelisto-challenge/challenge/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import Button from'./Button';import React,{useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function Card(props){var _props$card=props.card,image=_props$card.image,sku=_props$card.sku,title=_props$card.title,description=_props$card.description,price=_props$card.price;var _useState=useState(\"Add to Basket \\xA3\".concat(price)),_useState2=_slicedToArray(_useState,2),buttonTxt=_useState2[0],setButtonTxt=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),buttonClass=_useState4[0],setButtonClass=_useState4[1];// split txt\nvar makeList=function makeList(description){var list=description.split('- ');list=list.map(function(item){if(item)return item;else return undefined;});return list.filter(Boolean);};var handleClick=function handleClick(card){props.addItem(card);setButtonTxt('Item added');setButtonClass('added');setTimeout(function(){// reset button\nsetButtonTxt(\"Add to Basket \\xA3\".concat(price));setButtonClass('');},3000);};var list=makeList(description);return/*#__PURE__*/_jsxs(\"section\",{className:\"card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"card-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"img-container\",children:/*#__PURE__*/_jsx(\"img\",{className:\"img\",src:\"./\".concat(image),alt:title})}),/*#__PURE__*/_jsx(\"h3\",{className:\"title\",children:title}),/*#__PURE__*/_jsx(\"div\",{className:\"sku\",children:sku}),/*#__PURE__*/_jsx(\"ul\",{className:\"points\",children:list.map(function(item){return/*#__PURE__*/_jsx(\"li\",{className:\"point\",children:item},item);})})]}),/*#__PURE__*/_jsx(Button,{click:function click(){return handleClick(props.card);},class:\"bottom \".concat(buttonClass),txt:buttonTxt})]});}","map":{"version":3,"sources":["/home/aktoriukas/Documents/projects/kelisto-challenge/challenge/src/components/Card.js"],"names":["Button","React","useState","useEffect","Card","props","card","image","sku","title","description","price","buttonTxt","setButtonTxt","buttonClass","setButtonClass","makeList","list","split","map","item","undefined","filter","Boolean","handleClick","addItem","setTimeout"],"mappings":"kJAAA,MAAOA,CAAAA,MAAP,KAAmB,UAAnB,CAEA,MAAOC,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,C,wFAEA,cAAe,SAASC,CAAAA,IAAT,CAAcC,KAAd,CAAqB,iBAEkBA,KAAK,CAACC,IAFxB,CAExBC,KAFwB,aAExBA,KAFwB,CAEjBC,GAFiB,aAEjBA,GAFiB,CAEZC,KAFY,aAEZA,KAFY,CAELC,WAFK,aAELA,WAFK,CAEQC,KAFR,aAEQA,KAFR,eAIET,QAAQ,6BAAmBS,KAAnB,EAJV,wCAIzBC,SAJyB,eAIdC,YAJc,8BAKMX,QAAQ,CAAC,EAAD,CALd,yCAKzBY,WALyB,eAKZC,cALY,eAOhC;AACA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACN,WAAD,CAAiB,CAC9B,GAAIO,CAAAA,IAAI,CAAGP,WAAW,CAACQ,KAAZ,CAAkB,IAAlB,CAAX,CACAD,IAAI,CAAGA,IAAI,CAACE,GAAL,CAAS,SAAAC,IAAI,CAAI,CACpB,GAAIA,IAAJ,CAAU,MAAOA,CAAAA,IAAP,CAAV,IACK,OAAOC,CAAAA,SAAP,CACR,CAHM,CAAP,CAIA,MAAOJ,CAAAA,IAAI,CAACK,MAAL,CAAYC,OAAZ,CAAP,CACH,CAPD,CASA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAAAlB,IAAI,CAAI,CACxBD,KAAK,CAACoB,OAAN,CAAcnB,IAAd,EACAO,YAAY,CAAC,YAAD,CAAZ,CACAE,cAAc,CAAC,OAAD,CAAd,CACAW,UAAU,CAAC,UAAM,CACb;AACAb,YAAY,6BAAmBF,KAAnB,EAAZ,CACAI,cAAc,CAAC,EAAD,CAAd,CACH,CAJS,CAIP,IAJO,CAAV,CAKH,CATD,CAWA,GAAME,CAAAA,IAAI,CAAGD,QAAQ,CAACN,WAAD,CAArB,CAGA,mBACI,iBAAS,SAAS,CAAC,MAAnB,wBACI,aAAK,SAAS,CAAC,gBAAf,wBACI,YAAK,SAAS,CAAC,eAAf,uBACI,YAAK,SAAS,CAAC,KAAf,CAAqB,GAAG,aAAOH,KAAP,CAAxB,CAAwC,GAAG,CAAEE,KAA7C,EADJ,EADJ,cAII,WAAI,SAAS,CAAC,OAAd,UAAuBA,KAAvB,EAJJ,cAKI,YAAK,SAAS,CAAC,KAAf,UAAsBD,GAAtB,EALJ,cAOI,WAAI,SAAS,CAAC,QAAd,UACKS,IAAI,CAACE,GAAL,CAAS,SAAAC,IAAI,qBACV,WAAI,SAAS,CAAC,OAAd,UAAkCA,IAAlC,EAA2BA,IAA3B,CADU,EAAb,CADL,EAPJ,GADJ,cAeI,KAAC,MAAD,EAAQ,KAAK,CAAE,uBAAMI,CAAAA,WAAW,CAACnB,KAAK,CAACC,IAAP,CAAjB,EAAf,CAA8C,KAAK,kBAAYQ,WAAZ,CAAnD,CAA8E,GAAG,CAAEF,SAAnF,EAfJ,GADJ,CAmBH","sourcesContent":["import Button from './Button'\n\nimport React, { useState, useEffect } from 'react'\n\nexport default function Card(props) {\n\n    const { image, sku, title, description, price } = props.card\n\n    const [buttonTxt, setButtonTxt] = useState(`Add to Basket £${price}`)\n    const [buttonClass, setButtonClass] = useState('')\n\n    // split txt\n    const makeList = (description) => {\n        let list = description.split('- ')\n        list = list.map(item => {\n            if (item) return item\n            else return undefined\n        })\n        return list.filter(Boolean)\n    }\n\n    const handleClick = card => {\n        props.addItem(card)\n        setButtonTxt('Item added')\n        setButtonClass('added')\n        setTimeout(() => {\n            // reset button\n            setButtonTxt(`Add to Basket £${price}`)\n            setButtonClass('')\n        }, 3000)\n    }\n\n    const list = makeList(description)\n\n\n    return (\n        <section className='card'>\n            <div className='card-container'>\n                <div className='img-container'>\n                    <img className='img' src={`./${image}`} alt={title} />\n                </div>\n                <h3 className='title'>{title}</h3>\n                <div className='sku'>{sku}</div>\n\n                <ul className='points'>\n                    {list.map(item => (\n                        <li className='point' key={item}>{item}</li>\n                    ))}\n                </ul>\n\n            </div>\n            <Button click={() => handleClick(props.card)} class={`bottom ${buttonClass}`} txt={buttonTxt} />\n        </section>\n    )\n}"]},"metadata":{},"sourceType":"module"}