{"ast":null,"code":"var _jsxFileName = \"/home/aktoriukas/Documents/projects/kelisto-challenge/challenge/src/Shop.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport data from './data/products.json';\nimport Card from './components/Card';\nimport Button from './components/Button';\nimport Basket from './components/Basket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Shop(props) {\n  _s();\n\n  const [basket, setBasket] = useState(false);\n  const [itemsCount, setItemsCount] = useState(0);\n  const [basketItems, setBasketItems] = useState([]);\n\n  const addItem = item => {\n    basketItems.forEach(basketItem => {\n      if (basketItem.productId === item.productId) {\n        basketItem.count = 2;\n      }\n    });\n    setBasketItems([...basketItems, item]);\n    setItemsCount(itemsCount + 1);\n  };\n\n  const removeItem = id => {\n    setBasketItems(basketItems.filter(item => item.productId !== id));\n    setItemsCount(itemsCount - 1);\n  };\n\n  let cards = data.map(card => /*#__PURE__*/_jsxDEV(Card, {\n    addItem: addItem,\n    card: card\n  }, card.productId, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this));\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        class: \"basket\",\n        click: () => setBasket(true),\n        txt: `show basket (${!itemsCount ? 'empty' : itemsCount})`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), basket ? /*#__PURE__*/_jsxDEV(Basket, {\n        removeItem: removeItem,\n        setBasket: setBasket,\n        items: basketItems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this) : '']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"products grid\",\n      children: cards\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Shop, \"bePKuDyQBxR49u+dMzayxTmpWH4=\");\n\n_c = Shop;\n\nvar _c;\n\n$RefreshReg$(_c, \"Shop\");","map":{"version":3,"sources":["/home/aktoriukas/Documents/projects/kelisto-challenge/challenge/src/Shop.js"],"names":["React","useState","data","Card","Button","Basket","Shop","props","basket","setBasket","itemsCount","setItemsCount","basketItems","setBasketItems","addItem","item","forEach","basketItem","productId","count","removeItem","id","filter","cards","map","card","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AAEhC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACS,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,CAAD,CAA5C;AACA,QAAM,CAACW,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,EAAD,CAA9C;;AAEA,QAAMa,OAAO,GAAIC,IAAD,IAAU;AACtBH,IAAAA,WAAW,CAACI,OAAZ,CAAoBC,UAAU,IAAI;AAC9B,UAAIA,UAAU,CAACC,SAAX,KAAyBH,IAAI,CAACG,SAAlC,EAA6C;AACzCD,QAAAA,UAAU,CAACE,KAAX,GAAmB,CAAnB;AACH;AACJ,KAJD;AAKAN,IAAAA,cAAc,CAAC,CAAC,GAAGD,WAAJ,EAAiBG,IAAjB,CAAD,CAAd;AACAJ,IAAAA,aAAa,CAACD,UAAU,GAAG,CAAd,CAAb;AACH,GARD;;AAUA,QAAMU,UAAU,GAAGC,EAAE,IAAI;AACrBR,IAAAA,cAAc,CAACD,WAAW,CAACU,MAAZ,CAAmBP,IAAI,IAAIA,IAAI,CAACG,SAAL,KAAmBG,EAA9C,CAAD,CAAd;AACAV,IAAAA,aAAa,CAACD,UAAU,GAAG,CAAd,CAAb;AACH,GAHD;;AAKA,MAAIa,KAAK,GAAGrB,IAAI,CAACsB,GAAL,CAASC,IAAI,iBACrB,QAAC,IAAD;AAAM,IAAA,OAAO,EAAEX,OAAf;AAA6C,IAAA,IAAI,EAAEW;AAAnD,KAA6BA,IAAI,CAACP,SAAlC;AAAA;AAAA;AAAA;AAAA,UADQ,CAAZ;AAGAQ,EAAAA,OAAO,CAACC,GAAR,CAAYzB,IAAZ;AAEA,sBACI;AAAA,4BAEI;AAAQ,MAAA,SAAS,EAAC,QAAlB;AAAA,8BACI,QAAC,MAAD;AACI,QAAA,KAAK,EAAC,QADV;AAEI,QAAA,KAAK,EAAE,MAAMO,SAAS,CAAC,IAAD,CAF1B;AAGI,QAAA,GAAG,EAAG,gBAAe,CAACC,UAAD,GAAc,OAAd,GAAwBA,UAAW;AAH5D;AAAA;AAAA;AAAA;AAAA,cADJ,EAMKF,MAAM,gBACH,QAAC,MAAD;AACI,QAAA,UAAU,EAAEY,UADhB;AAEI,QAAA,SAAS,EAAEX,SAFf;AAGI,QAAA,KAAK,EAAEG;AAHX;AAAA;AAAA;AAAA;AAAA,cADG,GAMH,EAZR;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAkBI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,gBACKW;AADL;AAAA;AAAA;AAAA;AAAA,YAlBJ;AAAA,kBADJ;AAwBH;;GAlDuBjB,I;;KAAAA,I","sourcesContent":["import React, { useState } from 'react'\n\nimport data from './data/products.json'\nimport Card from './components/Card'\nimport Button from './components/Button'\nimport Basket from './components/Basket'\n\nexport default function Shop(props) {\n\n    const [basket, setBasket] = useState(false)\n    const [itemsCount, setItemsCount] = useState(0)\n    const [basketItems, setBasketItems] = useState([])\n\n    const addItem = (item) => {\n        basketItems.forEach(basketItem => {\n            if (basketItem.productId === item.productId) {\n                basketItem.count = 2\n            }\n        })\n        setBasketItems([...basketItems, item])\n        setItemsCount(itemsCount + 1)\n    }\n\n    const removeItem = id => {\n        setBasketItems(basketItems.filter(item => item.productId !== id))\n        setItemsCount(itemsCount - 1)\n    }\n\n    let cards = data.map(card => (\n        <Card addItem={addItem} key={card.productId} card={card} />\n    ))\n    console.log(data)\n\n    return (\n        <>\n\n            <header className='header'>\n                <Button\n                    class='basket'\n                    click={() => setBasket(true)}\n                    txt={`show basket (${!itemsCount ? 'empty' : itemsCount})`} />\n\n                {basket ?\n                    <Basket\n                        removeItem={removeItem}\n                        setBasket={setBasket}\n                        items={basketItems} />\n                    :\n                    ''\n                }\n            </header>\n\n            <div className='products grid'>\n                {cards}\n            </div>\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}