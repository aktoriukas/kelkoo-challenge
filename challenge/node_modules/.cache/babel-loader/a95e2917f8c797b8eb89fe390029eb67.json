{"ast":null,"code":"var _jsxFileName = \"/home/aktoriukas/Documents/projects/kelisto-challenge/challenge/src/Shop.js\",\n    _s = $RefreshSig$();\n\n// COLOURS ============================\nimport React, { useState } from 'react';\nimport data from './data/products.json';\nimport Card from './components/Card';\nimport Button from './components/Button';\nimport Basket from './components/Basket';\nimport Img from './img/sales.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Shop(props) {\n  _s();\n\n  const [basket, setBasket] = useState(false);\n  const [itemsCount, setItemsCount] = useState(0);\n  const [basketItems, setBasketItems] = useState([]);\n\n  const addItem = item => {\n    var _item$count;\n\n    item.count = (_item$count = item.count) !== null && _item$count !== void 0 ? _item$count : 1;\n\n    if (item.count === 0) {\n      item.count = 1;\n    }\n\n    setItemsCount(itemsCount + 1); //check for dublicates\n\n    for (let i = 0; i < basketItems.length; i++) {\n      if (basketItems[i].productId === item.productId) {\n        let itemsCopy = [...basketItems];\n        itemsCopy[i].count++;\n        setBasketItems(itemsCopy);\n        return;\n      }\n    }\n\n    setBasketItems([...basketItems, item]);\n  };\n\n  const removeItem = id => {\n    //check for dublicates\n    for (let i = 0; i < basketItems.length; i++) {\n      if (basketItems[i].productId === id) {\n        let itemsCopy = [...basketItems];\n        itemsCopy[i].count--;\n        setItemsCount(itemsCount - 1); //remove if quantity 0\n\n        if (itemsCopy[i].count === 0) {\n          setBasketItems(itemsCopy.filter(item => item.productId !== id));\n          return;\n        }\n\n        setBasketItems(itemsCopy);\n        return;\n      }\n    }\n  }; //make cards\n\n\n  let cards = data.map(card => /*#__PURE__*/_jsxDEV(Card, {\n    addItem: addItem,\n    card: card\n  }, card.productId, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"logo\",\n        children: \"SHOP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        class: \"basket\",\n        click: () => setBasket(!basket),\n        txt: `show basket (${!itemsCount ? 'empty' : itemsCount})`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), basket ? /*#__PURE__*/_jsxDEV(Basket, {\n        removeItem: removeItem,\n        setBasket: setBasket,\n        items: basketItems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this) : '']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"products grid\",\n      children: cards\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"background\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: Img,\n        alt: \"background\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Shop, \"bePKuDyQBxR49u+dMzayxTmpWH4=\");\n\n_c = Shop;\n\nvar _c;\n\n$RefreshReg$(_c, \"Shop\");","map":{"version":3,"sources":["/home/aktoriukas/Documents/projects/kelisto-challenge/challenge/src/Shop.js"],"names":["React","useState","data","Card","Button","Basket","Img","Shop","props","basket","setBasket","itemsCount","setItemsCount","basketItems","setBasketItems","addItem","item","count","i","length","productId","itemsCopy","removeItem","id","filter","cards","map","card"],"mappings":"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","sourcesContent":["// COLOURS ============================\nimport React, { useState } from 'react'\n\nimport data from './data/products.json'\nimport Card from './components/Card'\nimport Button from './components/Button'\nimport Basket from './components/Basket'\n\nimport Img from './img/sales.jpg'\n\nexport default function Shop(props) {\n\n    const [basket, setBasket] = useState(false)\n    const [itemsCount, setItemsCount] = useState(0)\n    const [basketItems, setBasketItems] = useState([])\n\n    const addItem = (item) => {\n        item.count = item.count ?? 1\n        if (item.count === 0) { item.count = 1 }\n        setItemsCount(itemsCount + 1)\n\n        //check for dublicates\n\n        for (let i = 0; i < basketItems.length; i++) {\n            if (basketItems[i].productId === item.productId) {\n                let itemsCopy = [...basketItems]\n                itemsCopy[i].count++\n                setBasketItems(itemsCopy)\n                return\n            }\n        }\n        setBasketItems([...basketItems, item])\n    }\n\n    const removeItem = id => {\n\n        //check for dublicates\n\n        for (let i = 0; i < basketItems.length; i++) {\n            if (basketItems[i].productId === id) {\n                let itemsCopy = [...basketItems]\n                itemsCopy[i].count--\n                setItemsCount(itemsCount - 1)\n\n                //remove if quantity 0\n\n                if (itemsCopy[i].count === 0) {\n                    setBasketItems(itemsCopy.filter(item => item.productId !== id))\n                    return\n                }\n                setBasketItems(itemsCopy)\n                return\n            }\n        }\n    }\n\n    //make cards\n    let cards = data.map(card => (\n        <Card addItem={addItem} key={card.productId} card={card} />\n    ))\n\n    return (\n        <>\n\n            <header className='header'>\n                <h1 className='logo'>SHOP</h1>\n                <Button\n                    class='basket'\n                    click={() => setBasket(!basket)}\n                    txt={`show basket (${!itemsCount ? 'empty' : itemsCount})`} />\n\n                {basket ?\n                    <Basket\n                        removeItem={removeItem}\n                        setBasket={setBasket}\n                        items={basketItems} />\n                    :\n                    ''\n                }\n            </header>\n\n            <div className='products grid'>\n                {cards}\n            </div>\n            <div className='background'>\n                <img src={Img} alt='background' />\n            </div>\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}