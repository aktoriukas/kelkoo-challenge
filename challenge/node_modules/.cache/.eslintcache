[{"/home/aktoriukas/Documents/projects/kelisto-challenge/challenge/src/index.js":"1","/home/aktoriukas/Documents/projects/kelisto-challenge/challenge/src/Shop.js":"2","/home/aktoriukas/Documents/projects/kelisto-challenge/challenge/src/components/Card.js":"3","/home/aktoriukas/Documents/projects/kelisto-challenge/challenge/src/components/Button.js":"4","/home/aktoriukas/Documents/projects/kelisto-challenge/challenge/src/components/Basket.js":"5","/home/aktoriukas/Documents/projects/kelisto-challenge/challenge/src/components/Item.js":"6"},{"size":225,"mtime":1614103373423,"results":"7","hashOfConfig":"8"},{"size":2543,"mtime":1614177833928,"results":"9","hashOfConfig":"8"},{"size":1598,"mtime":1614175205545,"results":"10","hashOfConfig":"8"},{"size":182,"mtime":1614110319418,"results":"11","hashOfConfig":"8"},{"size":1293,"mtime":1614174468367,"results":"12","hashOfConfig":"8"},{"size":580,"mtime":1614174577995,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1ep329b",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/aktoriukas/Documents/projects/kelisto-challenge/challenge/src/index.js",[],["28","29"],"/home/aktoriukas/Documents/projects/kelisto-challenge/challenge/src/Shop.js",[],"/home/aktoriukas/Documents/projects/kelisto-challenge/challenge/src/components/Card.js",["30"],"import Button from './Button'\n\nimport React, { useState, useEffect } from 'react'\n\nexport default function Card(props) {\n\n    const { image, sku, title, description, price } = props.card\n\n    const [buttonTxt, setButtonTxt] = useState(`Add to Basket £${price}`)\n    const [buttonClass, setButtonClass] = useState('')\n\n    // split txt\n    const makeList = (description) => {\n        let list = description.split('- ')\n        list = list.map(item => {\n            if (item) return item\n            else return undefined\n        })\n        return list.filter(Boolean)\n    }\n\n    const handleClick = card => {\n        props.addItem(card)\n        setButtonTxt('Item added')\n        setButtonClass('added')\n        setTimeout(() => {\n            // reset button\n            setButtonTxt(`Add to Basket £${price}`)\n            setButtonClass('')\n        }, 3000)\n    }\n\n    const list = makeList(description)\n\n\n    return (\n        <section className='card'>\n            <div className='card-container'>\n                <div className='img-container'>\n                    <img className='img' src={`./${image}`} alt={title} />\n                </div>\n                <h3 className='title'>{title}</h3>\n                <div className='sku'>{sku}</div>\n\n                <ul className='points'>\n                    {list.map(item => (\n                        <li className='point' key={item}>{item}</li>\n                    ))}\n                </ul>\n\n            </div>\n            <Button click={() => handleClick(props.card)} class={`bottom ${buttonClass}`} txt={buttonTxt} />\n        </section>\n    )\n}","/home/aktoriukas/Documents/projects/kelisto-challenge/challenge/src/components/Button.js",[],"/home/aktoriukas/Documents/projects/kelisto-challenge/challenge/src/components/Basket.js",[],"/home/aktoriukas/Documents/projects/kelisto-challenge/challenge/src/components/Item.js",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":3,"column":27,"nodeType":"37","messageId":"38","endLine":3,"endColumn":36},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]